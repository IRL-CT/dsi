---
import Layout from '@layouts/Default.astro';
import RecentBlogPosts from '@components/generic/RecentBlogPosts.astro';
import MobileSocials from '@components/home/MobileSocials.astro';
import { Pill } from '@eliancodes/brutal-ui';
import { Button } from '@eliancodes/brutal-ui';
import { Card } from '@eliancodes/brutal-ui';
import LazyBoxVideo from '@components/custom/LazyBoxVideo.astro';
import "../styles/global.css";


const teamMembers = [
  {
    name: 'Matt Franchi',
    role: 'Computer Science PhD Candidate',
    image: '/team/matt.jpg',
    link: 'https://mattwfranchi.github.io'
  },
  {
    name: 'Hauke Sandhaus',
    role: 'Information Science PhD Candidate',
    image: '/team/hauke.webp',
    link: ''
  },
  {
    name: 'Madiha Zahrah Choksi',
    role: 'Information Science PhD Candidate',
    image: '/team/madiha.avif',
    link: ''
  },
  {
    name: 'Severin Engelmann',
    role: 'Digital Life Initiative Postdoctoral Associate',
    image: '/team/severin.avif',
    link: ''
 
  },
  {
    name: 'Wendy Ju', 
    role: 'Associate Professor',
    image: '/team/wendy.jpg',
    link: 'https://wendyju.com'
  },
  {
    name: 'Helen Nissenbaum',
    role: 'Professor / Director of Digital Life Initiative',
    image: '/team/helen.jpg',
    link: ''
  }
];
---

<Layout
  title='Dense Street Imagery, Made @ Cornell Tech'
  pageTitle='Dense Street Imagery (DSI)'
  description='Surveying emerging data streams from autonomous vehicles, dashcams, and more "digital eyes on the street".'
>
  <main class='p-6' style="">
    <section id='about' class='flex flex-col gap-8 mt-4 max-w-6xl mx-auto'>
      {/* Main Content */}
      <Card color="#f3f3f3">
        <div class="p-6">
            <h2 class='lg:text-5xl mb-[-1rem] dm-serif underline'>
              Dense Street Imagery (DSI)
            </h2>
          <h2 class='lg:text-3xl mb-12 dm-serif'>
            Visual data from digital eyes on the street.
          </h2>
            <div class="flex flex-col lg:flex-row justify-between items-center mb-8">
            
            <div id="logos" class="flex items-center gap-4 flex-wrap justify-center lg:justify-start">
              <img src="/cornell_logo_simple_b31b1b.png" alt="Cornell University Logo" class="h-16 lg:h-24 w-auto" />
              <img src="/cornell_tech.png" alt="Cornell Tech Logo" class="h-16 lg:h-24 w-auto" />
            </div>
            <h3 class='text-xl lg:text-2xl dm-serif max-w-[450px] mb-4 lg:mb-0'>
              ACM FAccT '25
            </h3>
            </div>
          <div id="materials-buttons" class="poppins text-lg flex flex-row gap-8">
            <Button color="#FFE1E1" target={'_blank'} href='https://dl.acm.org/doi/10.1145/3715275.3732185'>
              <span class="font-bold no-underline hover:no-underline">FAccT '25 Paper &rarr;</span>
            </Button>
          </div>
        </div>
       </Card>

       <Card>
        <div class="p-6">
        <h3 class='text-2xl lg:text-4xl mb-18 dm-serif'>
          Project Team
        </h3>
        <div class="flex justify-center items-start w-full">
          <div class="grid grid-cols-2 lg:grid-cols-4 gap-8 w-full px-4 lg:px-8">
            {
              teamMembers.map((member, index, array) => {
                // For the last two items in a six-member team, position them in columns 2 and 3
                // of the 4-column grid to center them
                let gridColumnClass = '';
                if (array.length === 6 && index === 4) {
                  gridColumnClass = 'lg:col-start-2';
                }
                if (array.length === 6 && index === 5) {
                  gridColumnClass = 'lg:col-start-3';
                }
                
                return (
                  <a 
                    href={member.link}
                    class={`flex flex-col items-center group hover:transform hover:scale-105 transition-transform no-underline ${gridColumnClass}`}
                  >
                    <div class="w-24 lg:w-32 h-24 lg:h-32 rounded-full overflow-hidden border-2 border-white mb-2">
                      <img 
                        src={member.image} 
                        alt={member.name}
                        class="w-full h-full object-cover"
                      />
                    </div>
                    <h3 class="poppins text-lg lg:text-xl text-center no-underline mb-0">{member.name}</h3>
                    <p class="poppins text-sm lg:text-md text-gray-800 text-center max-w-[160px]">{member.role}</p>
                  </a>
                )
              })
            }
          </div>
        </div>
      </div>
      </Card>


   
      
     
    </section>
  </main>

  <style>
    :global(.brutal-btn #map) {
      padding: 1rem 2rem !important;
      font-size: 1.25rem !important;
      min-width: 200px !important;
    }
    .shadow-brutal {
      box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 1);
    }
    #indicatorsList {
      transition: opacity 0.3s ease-in-out,
                  transform 0.3s ease-in-out;
    }
  </style>
</Layout>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('toggleIndicators');
    const list = document.getElementById('indicatorsList');
    
    if (button && list) {
      button.addEventListener('click', () => {
        const isHidden = list.classList.contains('hidden');
        
        if (isHidden) {
          // Show the list
          list.classList.remove('hidden');
          void list.offsetWidth;
          list.classList.remove('opacity-0', 'translate-y-[-10px]');
          // Update to "Hide" immediately when showing
          button.querySelector('span').textContent = 'Hide Indicator List ↑';
        } else {
          // Hide the list
          list.classList.add('opacity-0', 'translate-y-[-10px]');
          // Update to "View" immediately when hiding
          button.querySelector('span').textContent = 'View Full Indicator List ↓';
          setTimeout(() => {
            list.classList.add('hidden');
          }, 300);
        }
      });
    }
  });
</script>

